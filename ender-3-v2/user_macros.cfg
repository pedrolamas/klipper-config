[gcode_macro HOME_PRINTER]
description: Homes printer if not yet homed
gcode:
  {% if not 'xyz' in printer.toolhead.homed_axes %}
    M117 Homing...
    G28
  {% endif %}

[gcode_macro BED_PREHEAT]
description: Pre-heat bed
gcode:
  {% set TARGET_TEMP = params.TARGET_TEMP | default(60, true) | float %}
  M117 Preheating bed to {TARGET_TEMP}...
  M190 S{TARGET_TEMP}

[gcode_macro PRIME_LINE]
description: Print prime line
gcode:
  M117 Printing prime line...
  G92 E0 ; Reset Extruder
  G1 Z2.0 F3000 ; Move Z Axis up little to prevent scratching of Heat Bed
  G1 X0.1 Y20 Z0.3 F5000.0 ; Move to start position
  G1 X0.1 Y200.0 Z0.3 F1500.0 E15 ; Draw the first line
  G1 X0.4 Y200.0 Z0.3 F5000.0 ; Move to side a little
  G1 X0.4 Y20 Z0.3 F1500.0 E30 ; Draw the second line
  G92 E0 ; Reset Extruder
  G1 Z2.0 F3000 ; Move Z Axis up little to prevent scratching of Heat Bed
  G1 X5 Y20 Z0.3 F5000.0 ; Move over to prevent blob squish

# START_PRINT to remove custom gcode from Cura, START_PRINT BED_TEMP={material_bed_temperature_layer_0} EXTRUDER_TEMP={material_print_temperature_layer_0}
[gcode_macro START_PRINT]
description: START_PRINT macro to use in slicer
gcode:
  {% set BED_TEMP = params.BED_TEMP | default(60, true) | float %}
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP | default(210, true) | float %}
  BED_PREHEAT TARGET_TEMP={BED_TEMP}
  M117 Homing...
  G90
  SET_GCODE_OFFSET Z=0.0
  G28
  BED_MESH_PROFILE LOAD=default
  G1 X15 Y20 Z5 F6000
  M117 Waiting for temperature...
  M140 S{BED_TEMP}
  M109 S{EXTRUDER_TEMP}
  M190 S{BED_TEMP}
  PRIME_LINE
  M117 Printing...

# END_PRINT to remove custom gcode from Cura, END_PRINT
[gcode_macro END_PRINT]
description: END_PRINT macro to use in slicer
gcode:
  M117 Print complete!
  G91 ;Relative positioning
  G1 E-2 F2700 ;Retract a bit
  G1 E-2 Z0.2 F2400 ;Retract and raise Z
  G1 X5 Y5 F3000 ;Wipe out
  G1 Z10 ;Raise Z more
  G90 ;Absolute positioning
  G1 X0 Y220 ;Present print
  M106 S0 ;Turn-off fan
  M104 S0 ;Turn-off hotend
  M140 S0 ;Turn-off bed
  M84 X Y E ;Disable all steppers but Z

[gcode_macro PID_CALIBRATE_BED]
description: Run bed PID calibration test
gcode:
  {% set TARGET_TEMP = params.TARGET_TEMP | default(60, true) | float %}
  PID_CALIBRATE HEATER=heater_bed TARGET={TARGET_TEMP}

[gcode_macro PID_CALIBRATE_HOTEND]
description: Run hotend PID calibration test
gcode:
  {% set TARGET_TEMP = params.TARGET_TEMP | default(205, true) | float %}
  PID_CALIBRATE HEATER=extruder TARGET={TARGET_TEMP}

[gcode_macro BED_MESH_CALIBRATE_AUTOMATIC]
description: Automatic Bed Mesh Calibrate
gcode:
  {% set TARGET_TEMP = params.TARGET_TEMP | default(60, true) | float %}
  BED_PREHEAT TARGET_TEMP={TARGET_TEMP}
  HOME_PRINTER
  BED_MESH_CALIBRATE

[gcode_macro SCREWS_TILT_CALIBRATE]
description: Automatic Screw Tilt Calibrate
gcode:
  {% set TARGET_TEMP = params.TARGET_TEMP | default(60, true) | float %}
  BED_PREHEAT TARGET_TEMP={TARGET_TEMP}
  HOME_PRINTER
  SCREWS_TILT_CALCULATE

[gcode_macro TUNING_TOWER_PRESSURE_ADVANCE]
description: Tuning Tower for Pressure Advance
gcode:
  {% set START = params.START | default(0, true) | float %}
  {% set FACTOR = params.FACTOR | default(0.005, true) | float %}
  SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY=1 ACCEL=500
  TUNING_TOWER COMMAND=SET_PRESSURE_ADVANCE PARAMETER=ADVANCE START={START} FACTOR={FACTOR}

[gcode_macro BEEP]
description: Small alert
gcode:
  M300 S1 P50
  M300 S1 P50

[gcode_macro DUMP_PARAMETERS]
description: Dump current configuration parameters
gcode:
  {% set donotwant = ['bed_mesh', 'configfile'] %}
  {% set parameters = [] %}
  {% for name1 in printer | sort %}
    {% if 'S' in params %}
      {% if name1 is in [params.S] %}
        {% for name2 in printer[name1] | sort %}
          {% set parameters = parameters.append("printer['%s'].%s = %s" % (name1, name2, printer[name1][name2])) %}
        {% endfor %}
      {% endif %}
    {% else %}
      {% if name1 is not in donotwant %}
        {% for name2 in printer[name1] | sort %}
          {% set parameters = parameters.append("printer['%s'].%s = %s" % (name1, name2, printer[name1][name2])) %}
        {% endfor %}
      {% endif %}
    {% endif %}
  {% endfor %}
  {action_respond_info(parameters | join("\n"))}

[gcode_macro G29]
description: Bed Leveling
gcode:
  BED_MESH_CLEAR
  G28
  BED_MESH_CALIBRATE
  G28

[gcode_macro M117]
description: Set LCD Message
rename_existing: M117.1
gcode:
  {% if rawparams %}
    {% set escaped_msg = rawparams.split(';', 1)[0].split('\x23', 1)[0] | replace('"', '\\"') %}
    SET_DISPLAY_TEXT MSG="{escaped_msg}"
    RESPOND TYPE=command MSG="{escaped_msg}"
  {% else %}
    SET_DISPLAY_TEXT
  {% endif %}

# TMC Debugging
[gcode_macro M122]
gcode:
  DUMP_TMC STEPPER=stepper_x
  DUMP_TMC STEPPER=stepper_y
  DUMP_TMC STEPPER=stepper_z
  DUMP_TMC STEPPER=extruder

[gcode_macro M125]
description: Park Head
gcode:
  SAVE_GCODE_STATE NAME=M125_state
  M117 Parking toolhead
  G91
  G1 Z20 F600
  G90
  G1 X125 Y0 F4000
  RESTORE_GCODE_STATE NAME=M125_state

[gcode_macro M206]
description: Set Home Offsets
gcode:
  {% set Z = params.Z | default(0, true) | float %}
  SET_GCODE_OFFSET Z=-{Z}

[gcode_macro M300]
description: Play Tone
gcode:
  {% set S = params.S | default(1000) | float %}
  {% set P = params.P | default(100) | int %}
  {% if S > 0 %}
    SET_PIN PIN=_beeper VALUE=0.3 CYCLE_TIME={ 1.0/S }
  {% endif %}
  G4 P{P}
  SET_PIN PIN=_beeper VALUE=0

[gcode_macro M486]
description: Cancel Objects
gcode:
  # Parameters known to M486 are as follows:
  #   [C<flag>] Cancel the current object
  #   [P<index>] Cancel the object with the given index
  #   [S<index>] Set the index of the current object.
  #       If the object with the given index has been canceled, this will cause
  #       the firmware to skip to the next object. The value -1 is used to
  #       indicate something that isn’t an object and shouldn’t be skipped.
  #   [T<count>] Reset the state and set the number of objects
  #   [U<index>] Un-cancel the object with the given index. This command will be
  #       ignored if the object has already been skipped

  {% if 'exclude_object' not in printer %}
    {action_raise_error("[exclude_object] is not enabled")}
  {% endif %}

  {% if 'T' in params %}
    EXCLUDE_OBJECT RESET=1

    {% for i in range(params.T | int) %}
      EXCLUDE_OBJECT_DEFINE NAME={i}
    {% endfor %}
  {% endif %}

  {% if 'C' in params %}
    EXCLUDE_OBJECT CURRENT=1
  {% endif %}

  {% if 'P' in params %}
    EXCLUDE_OBJECT NAME={params.P}
  {% endif %}

  {% if 'S' in params %}
    {% if params.S == '-1' %}
      {% if printer.exclude_object.current_object %}
        EXCLUDE_OBJECT_END NAME={printer.exclude_object.current_object}
      {% endif %}
    {% else %}
      EXCLUDE_OBJECT_START NAME={params.S}
    {% endif %}
  {% endif %}

  {% if 'U' in params %}
    EXCLUDE_OBJECT RESET=1 NAME={params.U}
  {% endif %}

[gcode_macro M600]
description: Filament Change
gcode:
  PAUSE

[gcode_macro M702]
description: Unload filament
gcode:
  SAVE_GCODE_STATE NAME=M702_state
  M117 Unloading Filament
  M83
  G1 E5 F300
  G1 E-100 F1800
  M82
  RESTORE_GCODE_STATE NAME=M702_state

[gcode_macro M900]
description: Linear Advance Factor
gcode:
  {% set K = params.K | default(0, true) | float %}
  SET_PRESSURE_ADVANCE ADVANCE={K}
