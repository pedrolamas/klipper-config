[gcode_macro SET_MESSAGE]
gcode:
  M117 {params.MESSAGE}
  {action_respond_info(params.MESSAGE)}

[gcode_macro HOME_PRINTER]
gcode:
  {% if not 'xyz' in printer.toolhead.homed_axes %}
    SET_MESSAGE MESSAGE="Homing..."
    G28
  {% endif %}

[gcode_macro BED_PREHEAT]
gcode:
  {% set TARGET_TEMP = params.TARGET_TEMP | default(60) | float %}
  SET_MESSAGE MESSAGE="Preheating bed to {TARGET_TEMP}..."
  M190 S{TARGET_TEMP}

[gcode_macro PRIME_LINE]
gcode:
  SET_MESSAGE MESSAGE="Printing prime line..."
  G92 E0 ; Reset Extruder
  G1 Z2.0 F3000 ; Move Z Axis up little to prevent scratching of Heat Bed
  G1 X0.1 Y20 Z0.3 F5000.0 ; Move to start position
  G1 X0.1 Y200.0 Z0.3 F1500.0 E15 ; Draw the first line
  G1 X0.4 Y200.0 Z0.3 F5000.0 ; Move to side a little
  G1 X0.4 Y20 Z0.3 F1500.0 E30 ; Draw the second line
  G92 E0 ; Reset Extruder
  G1 Z2.0 F3000 ; Move Z Axis up little to prevent scratching of Heat Bed
  G1 X5 Y20 Z0.3 F5000.0 ; Move over to prevent blob squish

# START_PRINT to remove custom gcode from Cura, START_PRINT BED_TEMP={material_bed_temperature_layer_0} EXTRUDER_TEMP={material_print_temperature_layer_0}
[gcode_macro START_PRINT]
gcode:
  {% set BED_TEMP = params.BED_TEMP | default(60) | float %}
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP | default(210) | float %}
  {% set MATERIAL = params.MATERIAL | default("PLA") | lower %}
  BED_PREHEAT
  SET_MESSAGE MESSAGE="Homing..."
  G90
  SET_GCODE_OFFSET Z=0.0
  G28
  BED_MESH_PROFILE LOAD=default
  G1 X15 Y20 Z5 F6000
  SET_MESSAGE MESSAGE="Waiting for temperature..."
  M140 S{BED_TEMP}
  M109 S{EXTRUDER_TEMP}
  M190 S{BED_TEMP}
  PRIME_LINE
  SET_MESSAGE MESSAGE="Printing..."

# END_PRINT to remove custom gcode from Cura, END_PRINT
[gcode_macro END_PRINT]
gcode:
  SET_MESSAGE MESSAGE="Print complete!"
  G91 ;Relative positioning
  G1 E-2 F2700 ;Retract a bit
  G1 E-2 Z0.2 F2400 ;Retract and raise Z
  G1 X5 Y5 F3000 ;Wipe out
  G1 Z10 ;Raise Z more
  G90 ;Absolute positioning
  G1 X0 Y220 ;Present print
  M106 S0 ;Turn-off fan
  M104 S0 ;Turn-off hotend
  M140 S0 ;Turn-off bed
  M84 X Y E ;Disable all steppers but Z
  #BED_MESH_CLEAR

[gcode_macro PID_CALIBRATE_BED]
description: Run bed PID calibration test
gcode:
  {% set TARGET_TEMP = params.TARGET_TEMP | default(60) | float %}
  PID_CALIBRATE HEATER=heater_bed TARGET={TARGET_TEMP}

[gcode_macro PID_CALIBRATE_HOTEND]
description: Run hotend PID calibration test
gcode:
  {% set TARGET_TEMP = params.TARGET_TEMP | default(205) | float %}
  PID_CALIBRATE HEATER=extruder TARGET={TARGET_TEMP}

[gcode_macro BED_MESH_CALIBRATE_AUTOMATIC]
description: Automatic Bed Mesh Calibrate
gcode:
  {% set TARGET_TEMP = params.TARGET_TEMP | default(60) | float %}
  BED_PREHEAT TARGET_TEMP={TARGET_TEMP}
  HOME_PRINTER
  BED_MESH_CALIBRATE

[gcode_macro TUNING_TOWER_PRESSURE_ADVANCE]
description: Tuning Tower for Pressure Advance
gcode:
  {% set START = params.START | default(0) | float %}
  {% set FACTOR = params.FACTOR | default(0.020) | float %}
  SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY=1 ACCEL=500
  TUNING_TOWER COMMAND=SET_PRESSURE_ADVANCE PARAMETER=ADVANCE START={START} FACTOR={FACTOR}

[gcode_macro DUMP_PARAMETERS]
gcode:
  {% set parameters = namespace(output = '') %}
  {% for name1 in printer %}
    {% for name2 in printer[name1] %}
      {% set donotwant = ['bed_mesh'] %}
      {% if name1 is not in donotwant %}
        {% set param = "printer['%s'].%s = %s" % (name1, name2, printer[name1][name2]) %}
        {% set parameters.output = parameters.output +  param + "\n" %}
      {% endif %}
      {% else %}
        {% set param = "printer['%s'] = %s" % (name1, printer[name1]) %}
        {% set parameters.output = parameters.output +  param + "\n" %}
    {% endfor %}
  {% endfor %}
  {action_respond_info(parameters.output)}

# Park Head
[gcode_macro M125]
gcode:
  SAVE_GCODE_STATE NAME=M125_state
  SET_MESSAGE MESSAGE="Parking toolhead"
  G91
  G1 Z20 F600
  G90
  G1 X125 Y0 F4000
  RESTORE_GCODE_STATE NAME=M125_state

# Linear Advance Factor
[gcode_macro M900]
gcode:
  {% set K = params.K | default(0) | float %}
  SET_PRESSURE_ADVANCE ADVANCE={K}
